{"version":3,"file":"static/js/660.87a5fe60.chunk.js","mappings":"4PAEaA,EAAeC,EAAAA,EAAAA,IAAH,6FAMZC,EAAeD,EAAAA,EAAAA,KAAH,iKAQZE,EAAgBF,EAAAA,EAAAA,MAAH,qEAKbG,EAAgBH,EAAAA,EAAAA,MAAH,2GAQbI,EAAiBJ,EAAAA,EAAAA,OAAH,qQ,SCkE3B,MApFA,WACE,IAAMK,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACHC,EAAQO,GACR,MACF,IAAK,QACHL,EAASK,GACT,MACF,IAAK,WACHH,EAAYG,GACZ,MACF,QACE,OAEL,EAQKC,EAAQ,WACZR,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EACD,OACE,UAACd,EAAD,YACE,2CAEA,UAACE,EAAD,CAAciB,SAfK,SAAAC,GACrBA,EAAEC,iBACFf,EAASgB,EAAAA,EAAAA,SAAwB,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDK,GACD,EAW2CK,aAAa,MAArD,WACE,UAACpB,EAAD,8BAEE,SAACC,EAAD,CACEoB,KAAK,OACLf,KAAK,OACLQ,MAAOR,EACPgB,QAAQ,yHACRC,MAAM,yIACNC,YAAY,qBACZC,UAAQ,EACRC,SAAUd,QAGd,UAACZ,EAAD,4BAEE,SAACC,EAAD,CACEoB,KAAK,QACLf,KAAK,QACLQ,MAAON,EACPc,QAAQ,2EACRC,MAAM,oLACNC,YAAY,uBACZC,UAAQ,EACRC,SAAUd,QAId,UAACZ,EAAD,8BAEE,SAACC,EAAD,CACEoB,KAAK,WACLf,KAAK,WACLQ,MAAOJ,EACPY,QAAQ,2CACRC,MAAM,wJACNC,YAAY,qBACZC,UAAQ,EACRC,SAAUd,QAGd,SAACV,EAAD,CAAgBmB,KAAK,SAArB,yBAIP,C","sources":["views/RegisterView/RegisterView.styled.jsx","views/RegisterView/RegisterView.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const RegisterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid pink;\n  border-radius: 6px;\n  padding: 20px;\n`;\nexport const RegisterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const RegisterInput = styled.input`\n  border-radius: 6px;\n\n  margin-bottom: 10px;\n  height: 24px;\n  width: 240px;\n`;\n\nexport const RegisterButton = styled.button`\n  cursor: pointer;\n  border-radius: 6px;\n  height: 32px;\n  width: 180px;\n  margin-top: 20px;\n\n  font-size: 18px;\n  font-weight: 600;\n  border: 1px solid rgb(255, 0, 255);\n  background: linear-gradient(90deg, #faf0cd, #fab397);\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport {\n  RegisterPage,\n  RegisterForm,\n  RegisterLabel,\n  RegisterInput,\n  RegisterButton,\n} from './RegisterView.styled';\n\nfunction RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <RegisterPage>\n      <h1>Register Here</h1>\n\n      <RegisterForm onSubmit={handleOnSubmit} autoComplete=\"off\">\n        <RegisterLabel>\n          Create Username\n          <RegisterInput\n            type=\"name\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter username ...\"\n            required\n            onChange={handleChange}\n          />\n        </RegisterLabel>\n        <RegisterLabel>\n          Email address\n          <RegisterInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n            title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n            placeholder=\"Enter your email ...\"\n            required\n            onChange={handleChange}\n          />\n        </RegisterLabel>\n\n        <RegisterLabel>\n          Create password\n          <RegisterInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n            title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n            placeholder=\"Enter password ...\"\n            required\n            onChange={handleChange}\n          />\n        </RegisterLabel>\n        <RegisterButton type=\"submit\">Submit</RegisterButton>\n      </RegisterForm>\n    </RegisterPage>\n  );\n}\n\nexport default RegisterView;\n"],"names":["RegisterPage","styled","RegisterForm","RegisterLabel","RegisterInput","RegisterButton","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","reset","onSubmit","e","preventDefault","authOperations","autoComplete","type","pattern","title","placeholder","required","onChange"],"sourceRoot":""}